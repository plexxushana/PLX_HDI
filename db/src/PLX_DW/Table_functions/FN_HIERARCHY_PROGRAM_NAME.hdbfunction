FUNCTION "plx_analytics::FN_HIERARCHY_PROGRAM_NAME" ( 
	  	CC_NODE  NVARCHAR(4),
		COMP_CD NVARCHAR(4) ,   
		CHART NVARCHAR(4)
) 
 	RETURNS table(
		  PARENT_ID nvarchar(54),   
 	  CHILD_ID NVARCHAR(54), 
 	  COMP_CODE NVARCHAR(4), 
 	--  LEV_H  	    INTEGER, 
 	  PARENT_DESC	NVARCHAR(54),
 	--  SORT_ORD NVARCHAR(3), 
 	 VP_INDEX		NVARCHAR(2),
 	 VP_POINT		NVARCHAR(100)
	)

	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER AS
BEGIN
/***************************** 
	Write your function logic
 *****************************/
 DECLARE lv_node nvarchar(4);
 declare lv_comp_cd nvarchar(4);
 lv_node := :CC_NODE;
 lv_comp_cd:=:COMP_CD;
 
 LT_VP_REPORTING  = SELECT DISTINCT PARENT_CC  , CHILD_CC , PARENT_DESCRIPTION AS VP_POINT,
  ( CASE  WHEN PARENT_CC='COS' THEN '1'  
        WHEN PARENT_CC='VPE' THEN '2'  
        WHEN PARENT_CC='VPS' THEN '3' 
        WHEN PARENT_CC='VPF' THEN '4' 
        WHEN PARENT_CC='VPP' THEN '5' 
        WHEN PARENT_CC='UND' THEN '6' 
        WHEN PARENT_CC='OTH' THEN '7'
        WHEN PARENT_CC='FDN' THEN '8'  
        END ) AS VP_INDEX 
 FROM "plx_analytics::CA_DIM_CC_HIERARCHY_ALL"('PLACEHOLDER' = ('$$IP_GROUP_NODE$$',
	 'TEGH'),
	 'PLACEHOLDER' = ('$$IP_KOKRS$$',	 '1800'))
	 WHERE  ( PARENT_CC   IN ( 'COS', 'VPE','VPF','VPP','VPS','UND', 'OTH', 'FDN'))  ;
	 
	 
 
 
 
 LT_PROGRAM_NAME = 
 SELECT 	 DISTINCT "PARENT_CC", LEFT("PARENT_CC",5) AS A ,
	 "PARENT_DESCRIPTION" AS "PARENT_DESC" 
      FROM "plx_analytics::CA_DIM_CC_HIERARCHY_ALL"('PLACEHOLDER' = ('$$IP_GROUP_NODE$$',
	 'TEGH'),
	 'PLACEHOLDER' = ('$$IP_KOKRS$$',	 '1800'))
	 WHERE  ( PARENT_CC  NOT IN ('CEO', 'COS', 'VPE','VPF','VPP','VPS','UND', 'OTH', 'BOG'))
	 AND PARENT_CC = LEFT(PARENT_CC,5);
 
 
 
 LT_STEP1 = 
 SELECT
	 "PARENT_CC", LEFT("PARENT_CC",5) AS A ,
	 "LEVEL_CC",
	 "CHILD_CC",
	 "GROUP_TEXT",
	 "NODE_TEXT",
	 "CONTROLLING_AREA",
	 "CENTER_TEXT",
	 "ZCOST_CENTER",
	 "PARENT_DESCRIPTION" 
FROM "plx_analytics::CA_DIM_CC_HIERARCHY_ALL"('PLACEHOLDER' = ('$$IP_GROUP_NODE$$', 'TEGH'),
	 'PLACEHOLDER' = ('$$IP_KOKRS$$',	 '1800'))
	 WHERE  ( PARENT_CC  NOT IN ('CEO', 'COS', 'VPE','VPF','VPP','VPS','UND', 'OTH', 'BOG'))
	 AND LEFT("CHILD_CC",5) NOT IN ( SELECT "PARENT_CC" FROM :LT_PROGRAM_NAME) 
	 ORDER BY LEVEL_CC, A ;
	

	LT_STEP2 = SELECT LEFT(A."PARENT_CC",5) AS "PARENT_ID", A."CHILD_CC" AS CHILD_ID, 
	            b."PARENT_DESC" 
	           FROM  :LT_STEP1 AS A LEFT OUTER  JOIN :LT_PROGRAM_NAME B 
	           ON LEFT(A."PARENT_CC",5)= B.PARENT_CC;
	
	   
	RETURN
	
--	SELECT  PARENT_ID,  CHILD_ID, '1800' AS COMP_CODE, 
--	  "PARENT_DESC" FROM :LT_STEP2 
--	  WHERE PARENT_ID <>'TEGH'; 
	  
	  
	  
	 SELECT  PARENT_ID,  CHILD_ID, '1800' AS COMP_CODE, 
	  "PARENT_DESC" , ( CASE WHEN PARENT_ID = 'FDN' THEN  '8' ELSE B.VP_INDEX END ) AS VP_INDEX , 
	  ( CASE WHEN PARENT_ID = 'FDN' THEN  'Foundation' else 	  B.VP_POINT  end) as VP_POINT
	  FROM :LT_STEP2 AS A LEFT OUTER  JOIN :LT_VP_REPORTING AS B 
	  ON A.PARENT_ID = B.CHILD_CC 
	  WHERE PARENT_ID <>'TEGH'; 
 
END;